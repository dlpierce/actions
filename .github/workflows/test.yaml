name: "Rspec for Rails Apps"
on:
  workflow_dispatch:
    inputs:
      base:
        required: false
        type: boolean
      confdir:
        required: false
        type: string
        default: "/app/samvera/hyrax-webapp/solr/config"
      subdir:
        default: '.'
        type: string
      tag:
        required: false
        type: string
      rspec_cmd:
        required: false
        type: string
        default: "gem install semaphore_test_boosters && rspec_booster --job $CI_NODE_INDEX/$CI_NODE_TOTAL"
      setup_db_cmd:
        required: false
        type: string
        default: "RAILS_ENV=test bundle exec rake db:create db:schema:load db:migrate"
      solr:
        required: false
        type: boolean
      web:
        required: false
        type: boolean
      worker:
        required: false
        type: boolean
  workflow_call:
    inputs:
      base:
        required: false
        type: boolean
      confdir:
        required: false
        type: string
        default: "/app/samvera/hyrax-webapp/solr/config"
      subdir:
        default: '.'
        type: string
      tag:
        required: false
        type: string
      rspec_cmd:
        required: false
        type: string
        default: "gem install semaphore_test_boosters && rspec_booster --job $CI_NODE_INDEX/$CI_NODE_TOTAL"
      setup_db_cmd:
        required: false
        type: string
        default: "RAILS_ENV=test bundle exec rake db:create db:schema:load db:migrate"
      solr:
        required: false
        type: boolean
      web:
        required: false
        type: boolean
      worker:
        required: false
        type: boolean

env:
  REGISTRY: ghcr.io

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Set N number of parallel jobs you want to run tests on.
        # Use higher number if you have slow tests to split them on more parallel jobs.
        # Remember to update ci_node_index below to 0..N-1
        ci_node_total: [3]
        # set N-1 indexes for parallel jobs
        # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
        ci_node_index: [0, 1, 2]
    env:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      CONFDIR: ${{ inputs.confdir }}
      DB_CLEANER_ALLOW_REMOTE_DB_URL: "true"
      TB_RSPEC_FORMATTER: progress
      TB_RSPEC_OPTIONS: --format RspecJunitFormatter --out rspec.xml
    steps:
      - id: setup
        name: Setup
        uses: scientist-softserv/actions/setup-env@v0.0.11
        with:
          tag: ${{ inputs.tag }}
          token: ${{ secrets.CHECKOUT_TOKEN || secrets.GITHUB_TOKEN }}
      - name: Github Container Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          limit-access-to-actor: true
      - name: Pull base image to prevent build
        if: ${{ inputs.base }}
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose pull base
      - name: Pull solr image to prevent build
        if: ${{ inputs.solr }}
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose pull solr
      - name: Pull web image to prevent build
        if: ${{ inputs.web }}
        run: >-
          cd ${{ inputs.subdir }};
          touch .env.development;
          touch .env;
          docker-compose pull web
      - name: Pull worker image to prevent build
        if: ${{ inputs.worker }}
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose pull worker
      - name: Start containers
        run: >-
          cd ${{ inputs.subdir }};
          [ -f "db/schema.rb" ] && chmod 777 db/schema.rb;
          docker-compose up -d web
      - name: Setup Solr
        if: ${{ inputs.solr }}
        shell: bash
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose exec -T web sh -c;
          solrcloud-upload-configset.sh "${CONFDIR}";
          SOLR_COLLECTION_NAME=hydra-test solrcloud-assign-configset.sh;
          solrcloud-assign-configset.sh
      - name: Setup db
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose exec -T web sh -c
          "${{ inputs.setup_db_cmd }}"
      - name: Run Specs
        id: run-specs
        env:
          # Specifies how many jobs you would like to run in parallel,
          # used for partitioning
          CI_NODE_TOTAL: ${{ matrix.ci_node_total }}
          # Use the index from matrix as an environment variable
          CI_NODE_INDEX: ${{ matrix.ci_node_index }}
        continue-on-error: true
        run: >-
          cd ${{ inputs.subdir }};
          docker-compose exec -T web sh -c
          "${{ inputs.rspec_cmd }}"
      - name: Fail job if spec failure
        run: if [[ ${{ steps.run-specs.outcome }} == "failure" ]]; then exit 1; else exit 0; fi
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'rspec*.xml'
